# RMI :-

- Remote Method Invocation
- It is a mechanism in Java that allows one system to access object of another system
- It basically enables the communication between 2 different Java program 

# Architecture of RMI :-

1. Stub = It is a proxy object that represents remote object on client side
        = Client interects with Stub as it is remote object

2. Skeleton = It resides on server side
            = It communicates with stub to pass client's request to server

3. RRL = Remote Reference Layer
       = It manages reference of remote object
       = It passes the client's method call from Stub to Skeleton

4. Transport Layer = It setup and manages connection
                   = It allows communication between client & server 


# Working of RMI :-

1. Client calls the method on the Stub
2. Stub passes request of method call to client side RRL
3. Client-side RRL passes this request to Server-side RRL
4. Sever-side RRL sends request to Skeleton
5. Steleton invokes the remote method of actual object on server
6. Result is send back to client through Skeleton, RRL & Stub


# Goals of RMI :-

- To minimize the complexity of application
- Reduce the difference between remote & proxy object
- Preserve security
- Distributed garbage collection